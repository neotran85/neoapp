buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'

apply plugin: 'io.fabric'
repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    signingConfigs {
        config {
            keyAlias 'AppyProduct_keystore'
            keyPassword 'namtran1985'
            storeFile file('/Users/namheo/Documents/GitHub/Android-AppyProduct-App/keystores/key')
            storePassword 'namtran1985'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "io.neo.mvvm"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.config
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"http://dev.lara.appycms.com/\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
            signingConfig signingConfigs.config
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"http://dev.lara.appycms.com/\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
            signingConfig signingConfigs.config
        }
    }
    dataBinding {
        enabled = true
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.google.android.gms:play-services-vision:$rootProject.playservicesplacesVersion"
    // network
    implementation "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"

    // database
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomDatabase"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomDatabase"

    // font
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // image
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // debug database
    debugImplementation "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // swipe view
    implementation "com.mindorks:placeholderview:$rootProject.placeholderviewVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    //Viewmodel
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.lifecycle"

    //UI Components
    implementation "com.wdullaer:materialdatetimepicker:$rootProject.materialdatetimepickerVersion"

    // Payments
    implementation "com.molpay:molpay-mobile-xdk-android:$rootProject.molpaymobilexdkVersion"

    // Map & Location
    implementation "com.google.android.gms:play-services-places:$rootProject.playservicesplacesVersion"

    implementation("com.crashlytics.sdk.android:crashlytics:$rootProject.crashlyticsVersion") {
        transitive = true;
    }
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
}
